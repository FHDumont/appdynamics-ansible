---

#For Production machines
- hosts: all
  tasks:
    - name: Include variables for the controller settings
      include_vars: vars/controller.yaml

    - name: Include variables for JFrog Artifactory settings
      include_vars: vars/artifactory.yaml

    - include_role:
        name: machine
      vars:
        # Define Agent Type and Version
        agent_version: 21.9.0.3184 #update this when upgrading
        agent_type: machine #update this when upgrading
        machine_hierarchy: "{{ 'Windows' if ansible_os_family == 'Windows' else 'Linux' }}|" # Make sure it ends with a |
        sim_enabled: "true"
        agent_log_level: "info"
        host_name: '{{ ansible_fqdn }}' # fully qualified domain name (failing that host_name)

        ma_agent_dest_file: "machine-agent.zip"

        account_access_key: "{{ controller_account_access_key }}"
        account_name: "{{ controller_account_name }}"

        # config properties docs - https://docs.appdynamics.com/display/latest/Machine+Agent+Configuration+Properties
        # Can be used to configure the proxy for the agent 
        # mind the space between each property for proxies - Optional - eg: -Dappdynamics.http.proxyHost=IP address -Dappdynamics.http.proxyPort=9090
        # check with ps -ef | grep machine if Machine agent not appearing
        java_system_properties: "" 

        # Analytics settings
        analytics_event_endpoint: ""
        enable_analytics_agent: "false"

        # Application settings
        application_name: "" # applciation name, empty by default
        tier_name: "" # tier name, empty by default, should be a service name, leave blank for deployments without an application agent

        # AppDynamics user on target machine 
        create_appdynamics_user: yes
        create_appdynamics_local_user: true # todo currently defaults to yes 
        appdynamics_user_id: "" # UID, empty by default
        appdynamics_group_id: "" # GID, empty by default

        # Encrypt Agent Credentials
        # store_filename file has to already be created to enable this functionality
        encrypted_credentials_enable: false
        encrypted_credentials_store_filename: "" # important: package this file together with agent binaries (path to file, e.g. /opt/appdynamics/machine-agent/secretKeyStoreEncrypted)
        encrypted_credentials_store_password: "" # important: obfuscated credentials store password (not plaintext)

        # todo
        # controller_environment: "prod"

        # Apply different custom extension configuration and/or deploy additional extensions
        is_support_group_paas: false # true / false

        # Enable custom extensions
        enable_custom_extensions: false

        custom_extensions_windows: 
          EventLogMonitor:
            enabled: true  
            extension_folder: 'EventLog'
            extension_file: 'WindowsEventLogsMonitoringExtension.zip' 
            extension_template: "win-custom-extension-config.json.j2"
            extension_vars: "custom_extension_win_config" # no file extension

          ServiceMonitor:
            enabled: true  
            extension_folder: 'ServiceMonitor'
            extension_file: 'WindowsServiceMonitorExtension.zip' 
            extension_template: "win-custom-extension-config.json.j2"
            extension_vars: "custom_extension_win_config" # no file extension

          TaskScheduler:
            enabled: true  
            extension_folder: 'TaskScheduler'
            extension_file: 'WindowsTaskSchedulerMonitorExtension.zip' 
            extension_template: "win-custom-extension-config.json.j2"
            extension_vars: "custom_extension_win_config" # no file extension

        custom_extensions_linux:
          ProcessMonitor:
            enabled: false  # actually a windows one, but just for the purpose of copying to target for now
            extension_folder: 'ProcessMonitor'
            extension_file: 'ProcessMonitor_Linux.zip'
            extension_template: "linux-process-monitor-config.json.j2"
            extension_vars: "process_monitor_linux_config" # no file extension

          LogMonitor:
            enabled: true  
            extension_folder: 'LogMonitor'
            extension_file: 'LogMonitor_Linux.zip'
            extension_template: "linux-log-monitor-config.json.j2"
            extension_vars: "log_monitor_linux_config" # no file extension


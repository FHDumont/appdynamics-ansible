---
# - name: Validate that the agent download URL is fit for Windows
#   assert:
#     that: "win_ma_finder_string in agent_download_url.stdout"
#     fail_msg: "It looks like you have downloaded the Linux machine agent instead of the Windows machine agent. You entered '{{ qualified_agent_type }}' in the playbook. Try using 'machine-win' instead. The URL: {{ agent_download_url.stdout }} is expected to contain {{ win_ma_finder_string }}"
#     success_msg: "Successfully validated {{ qualified_agent_type }} for Windows"

- name: Ensures machine agent {{ machine_agent_dest_folder_win }} dir exists
  win_file:
    path: "{{ machine_agent_dest_folder_win }}"
    state: directory

- name: Check if Machine Agent is already installed
  win_stat:
    path: "{{ machine_agent_dest_folder_win }}/InstallService.vbs"
  register: previous_agent

#using Powershell as win_zip module doesn't exist in Ansible - 10/2020
- name: Backup Machine Agent to  C:\Windows\Temp folder
  win_shell: "Compress-Archive -Path {{ machine_agent_dest_folder_win }} -DestinationPath  C:/Windows/Temp/machine_agent.{{ ansible_date_time.iso8601 }}.zip -Force"
  when: previous_agent.stat.exists
  changed_when: false

- name: Remove StdIn.Read in the UninstallService.vbs file which stops the playbook from returning
  win_lineinfile:
    dest: '{{ machine_agent_dest_folder_win }}/UninstallService.vbs'
    regexp: "^WScript.StdIn.Read"
    state: absent
  register: remove_read_std_in_result
  when: previous_agent.stat.exists
  changed_when: false

- name: Remove the machine agent service
  win_command: cscript.exe "{{ machine_agent_dest_folder_win }}/UninstallService.vbs"
  register: install_win_service_result
  when: previous_agent.stat.exists
  changed_when: false

- name: Clean up old agent after backup
  win_shell: "Remove-Item {{ machine_agent_dest_folder_win }}/* -Recurse"
  args:
      warn: false
  when: previous_agent.stat.exists
  changed_when: false

- name: Adjust the Machine agent file name to match the target OS
  set_fact:
    agent_file: "machineagent-bundle-64bit-windows-{{ agent_version }}.zip"
  when: ansible_os_family == 'Windows' and agent_type == 'machine'

- name: Downloading Windows Machine Agent
  win_get_url:
    url: '{{ artifactory_url }}/{{ agent_file }}'
    dest: "{{ machine_agent_dest_folder_win }}/{{ ma_agent_dest_file }}"
    url_username: "{{ artifactory_username }}"
    url_password: "{{ artifactory_password }}"
    force: true
  no_log: true #To prevent passwords to be on logs
  changed_when: false
  register: result
  failed_when: result.status_code != 200

- debug:
    msg: "{{ result }}"

- name: Unzip machine agent file
  win_unzip:
    src: "{{ machine_agent_dest_folder_win }}/{{ ma_agent_dest_file }}"
    dest: "{{ machine_agent_dest_folder_win }}"
    remote_src: yes
  changed_when: false

- name: Configure machine-agent controller-info.xml
  template:
    src: templates/win-machine-agent-controller-info.xml.j2
    dest: '{{ machine_agent_dest_folder_win }}/conf/controller-info.xml'
    force: yes
  changed_when: false

- name: Remove StdIn.Read in the InstallService.vbs file which stops the playbook from returning
  win_lineinfile:
    dest: '{{ machine_agent_dest_folder_win }}/InstallService.vbs'
    regexp: "^WScript.StdIn.Read"
    state: absent
  register: remove_read_std_in_result
  changed_when: false

# Update the Log4j setting to apply the desired log level to all the loggers
# listed in the {{agent_loggers}} list.
- name: Set the log level on the agent (if != info, which it is by default)
  include_role:
    name: logger
  vars:
    logger_role_standalone: false # no need to check if the dir exists
  when: agent_log_level|lower != 'info'

# - name: Set the log level for the machine agent
#   win_xml:
#     path: '{{ machine_agent_dest_folder_win }}/conf/logging/log4j.xml'
#     xpath: //Logger[@name='{{ item }}']
#     attribute: level
#     fragment: "{{ agent_log_level }}"
#     type: attribute
#   loop: "{{ agent_loggers }}"

- include_tasks: configure_log_analytics_win.yml
  when: enable_analytics_agent | bool



---

- name: Create subdirectory for custom extension
  win_file:
    path: "{{ machine_agent_dest_folder_win }}/monitors"
    state: directory

- name: Print extensions setting - PAAS
  debug:
    var: item
  with_dict: "{{ custom_extensions_windows_PAAS }}"
  when: enable_custom_extensions_PAAS | bool == True

- name: Print extensions setting - IAAS
  debug:
    var: item
  with_dict: "{{ custom_extensions_windows_IAAS }}"
  when: enable_custom_extensions_IAAS | bool == True

#todo: check if extesnion exists in target JFrog Artifactory - https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-FileInfo 
#https://stackoverflow.com/questions/42485260/ansible-check-file-exists-in-the-http-path-before-get-url-win-get-url

#Downloading for PAAS
- name: Downloading Windows custom extensions - PAAS
  win_get_url:
    url: '{{ artifactory_url }}/{{ item.value.extension_file }}'
    dest: "{{ machine_agent_dest_folder_win }}/monitors"
    url_username: "{{ artifactory_username }}"
    url_password: "{{ artifactory_password }}"
    force: true
  no_log: true #To prevent passwords to be on logs
  changed_when: false
  register: result
  failed_when: result.status_code != 200
  with_dict: "{{ custom_extensions_windows_PAAS }}"
  when: 
    - enable_custom_extensions_PAAS | bool == True
    - item.value.enabled | bool == True

- name: Unzip extension file - PAAS
  win_unzip:
    src: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_file }}"
    dest: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_folder }}"
    remote_src: yes
  with_dict: "{{ custom_extensions_windows_PAAS }}"
  when: 
    - enable_custom_extensions_PAAS | bool == True
    - item.value.enabled | bool == True

- name: Clean up - remove {{ item.value.extension_file }}
  win_file:
    path: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_file }}"
    state: absent
  changed_when: false
  with_dict: "{{ custom_extensions_windows_PAAS }}"
  when: 
    - enable_custom_extensions_PAAS | bool == True
    - item.value.enabled | bool == True

#Downloading for IAAS
- name: Downloading Windows custom extensions - IAAS
  win_get_url:
    url: '{{ artifactory_url }}/{{ item.value.extension_file }}'
    dest: "{{ machine_agent_dest_folder_win }}/monitors"
    url_username: "{{ artifactory_username }}"
    url_password: "{{ artifactory_password }}"
    force: true
  no_log: true #To prevent passwords to be on logs
  changed_when: false
  register: result
  failed_when: result.status_code != 200
  with_dict: "{{ custom_extensions_windows_IAAS }}"
  when: 
    - enable_custom_extensions_IAAS | bool == True
    - item.value.enabled | bool == True

- name: Unzip extension file - IAAS
  win_unzip:
    src: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_file }}"
    dest: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_folder }}"
    remote_src: yes
  with_dict: "{{ custom_extensions_windows_IAAS }}"
  when: 
    - enable_custom_extensions_IAAS | bool == True
    - item.value.enabled | bool == True
  

- name: Clean up - remove {{ item.value.extension_file }}
  win_file:
    path: "{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_file }}"
    state: absent
  changed_when: false
  with_dict: "{{ custom_extensions_windows_IAAS }}"
  when: 
    - enable_custom_extensions_IAAS | bool == True
    - item.value.enabled | bool == True

#Include variable files for different custom extensions
- include_vars: custom_extension_vars/event_log_win_config.yml
- include_vars: custom_extension_vars/process_monitor_win_config.yml


- name: Configure Custom Extension config file for PAAS - if Custom Extension is enabled
  template:
    src: "templates/{{ item.value.template }}"
    dest: '{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_folder }}/config.json'
    owner: "{{ appdynamics_user }}"
    group: "{{ appdynamics_user }}"
    mode: 0755
  changed_when: false
  with_dict: "{{custom_extensions_windows_PAAS}}"
  when: 
    - enable_custom_extensions_PAAS | bool == True
    - item.value.enabled | bool == True

- name: Configure Custom Extension config file for IAAS - if Custom Extension is enabled
  template:
    src: "templates/{{ item.value.template }}"
    dest: '{{ machine_agent_dest_folder_win }}/monitors/{{ item.value.extension_folder }}/config.json'
    owner: "{{ appdynamics_user }}"
    group: "{{ appdynamics_user }}"
    mode: 0755
  changed_when: false
  with_dict: "{{custom_extensions_windows_IAAS}}"
  when: 
    - enable_custom_extensions_IAAS | bool == True
    - item.value.enabled | bool == True
